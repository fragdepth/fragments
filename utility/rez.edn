; SPDX-License-Identifier: BUSL-1.1
; Copyright (c) 2021 Fragdepth Inc.
; Based on code licensed by Fragcolor Pte. Ltd.

; parameters
(def fragment-hash (slurp "../src/tmp/live-chain-eth-id"))
(def token-name "Rez Entity Test")
(def token-symbol "RTEST")
(def unique true)
(def can-update true)
(def uint96-max "0xffffffffffffffffffffffffffffffffffffffff") ; mint tokens forever
(def _10_000 "0xA") ; mint 10 tokens
(def max-supply _10_000)
(def private-key-base "MY PRIVATE KEY GENERATION FAILURE")

; contracts are deterministic so should be:
; Entity: 0xF1001090C0BaC91fB66721999487a51b4Ce25Ca5
; Vault: 0xF63E62f9e1cB77188490E9bBAB482d0169e345Aa

; contracts abis
(def fragment-abi (slurp "../src/Fragment.json"))
(def entity-abi (slurp "../src/Entity.json"))

(defn metamask-call [dest call]
  (->
   (str "await ethereum.request({method: 'eth_sendTransaction', params: [{from: ethereum.selectedAddress, to: \"" dest "\", data: \"") (PrependTo call)
   "\"}]})" (AppendTo call) call))

(defchain rezzer
  fragment-hash (FromBase58) = .fragmentHash
  max-supply (BigInt) (BigInt.ToBytes) = .maxSupply
  [.fragmentHash token-name token-symbol unique can-update .maxSupply]
  (Eth.EncodeCall fragment-abi "rez")
  (ToHex) >= .call
  (metamask-call "0xa55e75cae979f8f2f88afbe649dcfe5a1d525711" .call)
  (Log "Call Input"))

(defchain delegate
  private-key-base (Hash.Keccak-256) (| (ToHex) (Log "Private key"))
  (ECDSA.PublicKey)
  (Slice :From 1)
  (Hash.Keccak-256)
  (Slice :From 12)
  (ToHex)
  (Log "Eth Address") = .delegate
  [.delegate]
  (Eth.EncodeCall entity-abi "setDelegate")
  (ToHex) >= .call
  (metamask-call "0xeEca89Be996Ec6502A29C89c7f667e9e1EcD9F31" .call)
  (Log "Call Input"))

(defchain enable-public
  0.01 (BigInt.FromFloat 18) (| (BigInt.ToString) (Log)) (BigInt.ToBytes) = .eth-price
  10 (BigInt) (BigInt.ToBytes) = .amount
  [.eth-price .amount .amount]
  (Eth.EncodeCall entity-abi "setPublicSale")
  (ToHex) >= .call
  (metamask-call "0xeEca89Be996Ec6502A29C89c7f667e9e1EcD9F31" .call)
  (Log "Call Input"))

(defnode main)
(schedule main rezzer)
(schedule main delegate)
(schedule main enable-public)
(run main)