; SPDX-License-Identifier: BUSL-1.1
; Copyright Â© 2021 Fragcolor Pte. Ltd.

(def _args (eval `(assoc {} ~@*command-line-args*)))
(def port (if (contains? _args "--port") (read-string (get _args "--port")) 7070))
(def key (slurp "../secrets/preview-key.txt"))

(defnode main)

(defloop handler ; must be loop!
  (Http.Read) = .request
  (| (Take "target") >= .target (Log "target"))
  (| (Take "method") = .method (Log "method"))

  .method
  (Match
   ["GET" (->
           "cache/img/" (PrependTo .target)
           .target (FS.IsFile)
           (If (Is true)
               (->
                "/" (PrependTo .target) ; needed by sendfile
                .target)
               (->
                "/assets/Placeholder.png"))
           (Log "sending") (Http.SendFile))
    "POST" (->
            .request (Take "body") (StringToBytes) (FromBytes) (ExpectTable) (Log "payload") = .body
            .body (Take "key") (ExpectString) = .key
            (When (Is key)
                  (->
                   .body
                   (| (Take "payload") (ExpectBytes) = .payload)
                   (| (Take "name") (ExpectString) >= .name)
                   "cache/img/" (PrependTo .name)
                   .name (Log "storing") (FS.Write .payload :Overwrite true)
                   "Ok" (Http.Response))))]))

(defloop img-server
  (Setup
   key (Log "key"))
  (Http.Server handler :Port port))

(schedule main img-server)

(run main 0.1)